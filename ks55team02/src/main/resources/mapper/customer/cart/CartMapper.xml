<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ks55team02.customer.cart.mapper.CartMapper">

    <resultMap id="cartDTOResultMap" type="ks55team02.customer.cart.domain.CartDTO">
        <id     column="cart_item_id"   property="cartItemId"/>
        <result column="user_no"        property="userNo"/>
        <result column="gds_no"         property="gdsNo"/>
        <result column="store_id"       property="storeId"/>
        <result column="opt_no"         property="optNo"/>
        <result column="quantity"       property="quantity"/>
        <result column="added_at"       property="addedAt"/>
        <result column="updated_at"     property="updatedAt"/>
        <result column="is_chc_ord"     property="isChcOrd"/>
        <result column="gds_nm"         property="gdsNm"/>
        <result column="last_sel_prc"   property="gdsPrc"/>
        <result column="opt_nm"         property="optNm"/>
    </resultMap>

    <select id="selectCartItemsByUserNo" parameterType="String" resultMap="cartDTOResultMap">
        SELECT
	        ci.cart_item_id,
	        ci.user_no,
	        ci.gds_no,
	        ci.store_id,
	        ci.opt_no,
	        ci.quantity,
	        ci.added_at,
	        ci.updated_at,
	        ci.is_chc_ord,  
	        p.gds_nm,         -- AS 별칭 제거
	        p.last_sel_prc,   -- AS 별칭 제거
	        po.opt_nm         -- AS 별칭 제거
	    FROM
	        cart_items ci
	    LEFT JOIN
	        products p ON ci.gds_no = p.gds_no
	    LEFT JOIN
	        product_options po ON ci.opt_no = po.opt_no
	    WHERE
	        ci.user_no = #{userNo}
	    ORDER BY
	        ci.added_at DESC
    </select>

    <!-- [최종 수정] parameterType="map" 속성을 제거하여 @Param 어노테이션으로 넘어오는 개별 파라미터를 받도록 수정 -->
    <!-- 불필요한 store_id 조건도 제거 -->
    <select id="getExistingCartItem" resultMap="cartDTOResultMap">
        SELECT
            cart_item_id, user_no, gds_no, store_id, opt_no, quantity, added_at, updated_at, is_chc_ord
        FROM
            cart_items
        WHERE
            user_no = #{userNo}
            AND gds_no = #{gdsNo}
            <if test="optNo != null and optNo != ''">
                AND opt_no = #{optNo}
            </if>
            <if test="optNo == null or optNo == ''">
                AND opt_no IS NULL
            </if>
    </select>

    <insert id="insertCartItem" parameterType="ks55team02.customer.cart.domain.CartDTO">
        INSERT INTO cart_items (
            cart_item_id, user_no, gds_no, store_id, opt_no, quantity, added_at, is_chc_ord
        ) VALUES (
            #{cartItemId}, #{userNo}, #{gdsNo}, #{storeId}, #{optNo}, #{quantity}, #{addedAt}, #{isChcOrd}
        )
    </insert>
    
    <select id="getMaxCartItemId" resultType="String">
        SELECT
            MAX(CAST(SUBSTRING_INDEX(cart_item_id, '_', -1) AS UNSIGNED))
        FROM
            cart_items
        WHERE
            cart_item_id LIKE 'cart_id_%';
    </select>

    <update id="updateCartItemQuantity" parameterType="ks55team02.customer.cart.domain.CartDTO">
        UPDATE cart_items
        SET
            quantity = #{quantity},
            updated_at = #{updatedAt}
        WHERE
            cart_item_id = #{cartItemId}
    </update>

    <select id="getCartItemById" parameterType="String" resultMap="cartDTOResultMap">
        SELECT
            cart_item_id, user_no, gds_no, store_id, opt_no, quantity, added_at, updated_at, is_chc_ord
        FROM
            cart_items
        WHERE
            cart_item_id = #{cartItemId}
    </select>

    <delete id="deleteCartItem" parameterType="String">
        DELETE FROM
            cart_items
        WHERE
            cart_item_id = #{cartItemId}
    </delete>

    <delete id="clearCartByUserNo" parameterType="String">
        DELETE FROM
            cart_items
        WHERE
            user_no = #{userNo}
    </delete>

</mapper>
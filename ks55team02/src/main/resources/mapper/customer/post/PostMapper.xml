<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks55team02.customer.post.mapper.PostMapper">

	<resultMap id="postResultMap"
		type="ks55team02.customer.post.domain.Post">
		<id column="pst_sn" property="pstSn" />
		<result column="bbs_clsf_cd" property="bbsClsfCd" />
		<result column="wrtr_user_no" property="wrtrUserNo" />
		<result column="pst_ttl" property="pstTtl" />
		<result column="pst_cn" property="pstCn" />
		<result column="view_cnt" property="viewCnt" />
		<result column="ntc_pst_yn" property="ntcPstYn" />
		<result column="crt_dt" property="crtDt" />
		<result column="mdfcn_dt" property="mdfcnDt" />
		<result column="del_dt" property="delDt" />
		<result column="bbs_nm" property="bbsNm" />
		<result column="cmnt_cnt" property="cmntCnt" />
		<result column="inter_cnt" property="interCnt" />
	</resultMap>

	<resultMap id="userInfoResultMap"
		type="ks55team02.customer.login.domain.UserInfoResponse">
		<id column="user_no" property="userNo" />
		<result column="user_ncnm" property="userNcnm" />
		<result column="prfl_img" property="prflImg" />
	</resultMap>

	<resultMap id="postImageResultMap"
		type="ks55team02.customer.post.domain.PostImage">
		<id column="pst_img_sn" property="pstImgSn" />
		<result column="pst_sn" property="pstSn" />
		<result column="img_file_path_nm" property="imgFilePathNm" />
		<result column="pst_img_sort_sn" property="pstImgSortSn" />
	</resultMap>

	<resultMap id="postCommentResultMap"
		type="ks55team02.customer.post.domain.PostComment">
		<id column="pst_cmnt_sn" property="pstCmntSn" />
		<result column="pst_sn" property="pstSn" />
		<result column="wrtr_user_no" property="wrtrUserNo" />
		<result column="cmnt_cn" property="cmntCn" />
		<result column="crt_dt" property="crtDt" />
		<association property="writerInfo"
			resultMap="userInfoResultMap" />
	</resultMap>

	<resultMap id="postDetailResultMap"
		type="ks55team02.customer.post.domain.Post" extends="postResultMap">
		<result column="liked_by_current_user"
			property="likedByCurrentUser" />
		<result column="cmnt_wrt_authrt_lvl_val"
			property="cmntWrtAuthrtLvlVal" />
		<association property="writerInfo"
			resultMap="userInfoResultMap" />
		<collection property="imageList" javaType="java.util.List"
			ofType="ks55team02.customer.post.domain.PostImage" column="pst_sn"
			select="selectPostImagesByPstSn" />
		<collection property="commentList"
			javaType="java.util.List"
			ofType="ks55team02.customer.post.domain.PostComment" column="pst_sn"
			select="selectCommentListByPstSn" />
	</resultMap>

	<resultMap id="postListResultMap"
		type="ks55team02.customer.post.domain.Post" extends="postResultMap">
		<association property="writerInfo"
			javaType="ks55team02.customer.login.domain.UserInfoResponse">
			<result column="user_ncnm" property="userNcnm" />
		</association>
		<association property="representativeImage"
			column="pst_sn" select="selectFirstPostImageByPstSn"
			javaType="ks55team02.customer.post.domain.PostImage" />
	</resultMap>

	<resultMap type="ks55team02.customer.post.domain.Board"
		id="boardResultMap">
		<id column="bbs_clsf_cd" property="bbsClsfCd"></id>
		<result column="bbs_nm" property="bbsNm"></result>
		<result column="wrt_authrt_lvl_val" property="wrtAuthrtLvlVal"></result>
	</resultMap>

	<select id="selectPostImagesByPstSn"
		resultMap="postImageResultMap">
		SELECT pst_img_sn, pst_sn, img_file_path_nm, pst_img_sort_sn
		FROM post_images
		WHERE pst_sn = #{pstSn} AND del_dt IS NULL
		ORDER BY
		pst_img_sort_sn ASC
	</select>

	<select id="selectFirstPostImageByPstSn"
		resultMap="postImageResultMap">
		SELECT pst_img_sn, pst_sn, img_file_path_nm, pst_img_sort_sn
		FROM post_images
		WHERE pst_sn = #{pstSn} AND del_dt IS NULL
		ORDER BY
		pst_img_sort_sn ASC
		LIMIT 1
	</select>

	<select id="selectPostDetailByPstSn"
		resultMap="postDetailResultMap">
		SELECT
		p.pst_sn, p.bbs_clsf_cd, p.wrtr_user_no, p.pst_ttl, p.pst_cn, p.view_cnt,
		p.crt_dt,
		b.bbs_nm, b.cmnt_wrt_authrt_lvl_val, u.user_no, u.user_ncnm, up.prfl_img,
		(SELECT COUNT(*) FROM post_comments pc WHERE pc.pst_sn = p.pst_sn AND
		pc.del_dt IS NULL) AS cmnt_cnt,
		(SELECT COUNT(*) FROM post_interactions pi WHERE pi.pst_sn = p.pst_sn AND
		pi.intract_type_cd = 'LIKE' AND pi.rtrcn_dt IS NULL) AS inter_cnt,
		<if test="loginUserNo != null and loginUserNo != ''">
			EXISTS(SELECT 1 FROM post_interactions pi WHERE pi.pst_sn = p.pst_sn AND
			pi.user_no = #{loginUserNo} AND pi.intract_type_cd = 'LIKE' AND
			pi.rtrcn_dt IS NULL) AS liked_by_current_user
		</if>
		<if test="loginUserNo == null or loginUserNo == ''">
			0 AS liked_by_current_user
		</if>
		FROM
		posts p
		LEFT JOIN users u ON p.wrtr_user_no = u.user_no
		LEFT JOIN user_profiles up ON u.user_no = up.user_no
		LEFT JOIN boards b ON p.bbs_clsf_cd = b.bbs_clsf_cd
		WHERE
		p.pst_sn = #{pstSn} AND p.del_dt IS NULL;
	</select>

	<select id="selectCommentListByPstSn" parameterType="String"
		resultMap="postCommentResultMap">
		SELECT pc.pst_cmnt_sn, pc.pst_sn, pc.wrtr_user_no,
		pc.cmnt_cn, pc.crt_dt,
		u.user_no, u.user_ncnm, up.prfl_img
		FROM post_comments pc
		LEFT JOIN users u ON
		pc.wrtr_user_no = u.user_no
		LEFT JOIN user_profiles up ON u.user_no = up.user_no
		WHERE pc.pst_sn =
		#{pstSn} AND pc.del_dt IS NULL
		ORDER BY pc.crt_dt ASC;
	</select>



	<select id="selectBoardName" resultMap="boardResultMap">
		SELECT bbs_clsf_cd,
		bbs_nm FROM boards WHERE del_dt IS NULL
		ORDER BY CASE WHEN bbs_clsf_cd
		= 'notice' THEN 1 WHEN bbs_clsf_cd = 'freeBoard' THEN 2 WHEN
		bbs_clsf_cd = 'event_board' THEN 3 ELSE 4 END, bbs_nm ASC;
	</select>

	<select id="selectBoardListForWrite" resultMap="boardResultMap">
		SELECT
		bbs_clsf_cd,
		bbs_nm,
		wrt_authrt_lvl_val
		FROM
		boards
		WHERE
		del_dt IS NULL
		ORDER BY
		CASE
		WHEN bbs_clsf_cd = 'notice' THEN 1
		WHEN bbs_clsf_cd =
		'freeBoard' THEN 2
		WHEN bbs_clsf_cd = 'event_board' THEN 3
		ELSE 4
		END,
		bbs_nm ASC
	</select>

	<update id="updateViewCount" parameterType="String">
		UPDATE posts SET
		view_cnt = view_cnt + 1 WHERE pst_sn = #{pstSn};
	</update>

	<select id="selectPostListByBoardCd"
		resultMap="postListResultMap">
		SELECT
		p.pst_sn, p.bbs_clsf_cd, p.wrtr_user_no, p.pst_ttl, p.pst_cn, p.view_cnt,
		p.ntc_pst_yn, p.crt_dt,
		b.bbs_nm, u.user_ncnm,
		(SELECT COUNT(*) FROM post_comments pc WHERE pc.pst_sn = p.pst_sn AND
		pc.del_dt IS NULL) AS cmnt_cnt,
		(SELECT COUNT(*) FROM post_interactions pi WHERE pi.pst_sn = p.pst_sn AND
		pi.intract_type_cd = 'LIKE' AND pi.rtrcn_dt IS NULL) AS inter_cnt
		FROM posts p
		JOIN boards b ON p.bbs_clsf_cd = b.bbs_clsf_cd
		LEFT JOIN users u ON p.wrtr_user_no = u.user_no
		WHERE p.del_dt IS NULL AND b.del_dt IS NULL
		<if test="bbsClsfCd != null and bbsClsfCd != ''"> AND p.bbs_clsf_cd = #{bbsClsfCd} </if>
		ORDER BY p.ntc_pst_yn DESC, p.crt_dt DESC
		LIMIT #{limit} OFFSET #{offset};
	</select>

	<select id="selectPostListNumByBoardCd" resultType="int">
		SELECT COUNT(p.pst_sn) FROM posts p WHERE p.del_dt IS NULL
		<if test="bbsClsfCd != null and bbsClsfCd != ''"> AND p.bbs_clsf_cd = #{bbsClsfCd} </if>
	</select>

	<update id="deletePostImagesBySn">
		UPDATE post_images
		SET
		del_dt = NOW(),
		del_user_no = #{delUserNo}
		WHERE
		pst_img_sn IN
		<foreach collection="imageSnList" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>

	<select id="selectMaxPostNumber" resultType="Integer">
		SELECT MAX(CAST(SUBSTRING_INDEX(pst_sn, '_', -1) AS UNSIGNED)) FROM posts
		WHERE pst_sn REGEXP '^post_[0-9]+$';
	</select>

	<insert id="insertPost"
		parameterType="ks55team02.customer.post.domain.Post">
		INSERT INTO posts (pst_sn, bbs_clsf_cd, wrtr_user_no,
		pst_ttl, pst_cn, view_cnt, ntc_pst_yn, crt_dt)
		VALUES (#{pstSn},
		#{bbsClsfCd}, #{wrtrUserNo}, #{pstTtl}, #{pstCn}, 0, 0, NOW());
	</insert>

	<select id="selectMaxPostImageNumber" resultType="Integer">
		SELECT MAX(CAST(SUBSTRING_INDEX(pst_img_sn, '_', -1) AS UNSIGNED)) FROM
		post_images WHERE pst_img_sn REGEXP '^post_img_[0-9]+$';
	</select>

	<insert id="insertPostImages" parameterType="list">
		INSERT INTO post_images (pst_img_sn, pst_sn, img_file_path_nm,
		pst_img_sort_sn, crt_dt)
		VALUES
		<foreach collection="imageList" item="image" separator=",">
			(#{image.pstImgSn}, #{image.pstSn}, #{image.imgFilePathNm},
			#{image.pstImgSortSn}, NOW())
		</foreach>
	</insert>

	<select id="selectMaxCommentNumber" resultType="Integer">
		SELECT MAX(CAST(SUBSTRING_INDEX(pst_cmnt_sn, '_', -1) AS UNSIGNED)) FROM
		post_comments WHERE pst_cmnt_sn REGEXP '^cmnt_[0-9]+$';
	</select>

	<insert id="insertComment"
		parameterType="ks55team02.customer.post.domain.PostComment">
		INSERT INTO post_comments (pst_cmnt_sn, pst_sn,
		wrtr_user_no, cmnt_cn, crt_dt)
		VALUES (#{pstCmntSn}, #{pstSn},
		#{wrtrUserNo}, #{cmntCn}, NOW());
	</insert>

	<update id="updatePost"
		parameterType="ks55team02.customer.post.domain.Post">
		UPDATE posts
		SET
		bbs_clsf_cd = #{bbsClsfCd},
		pst_ttl = #{pstTtl},
		pst_cn = #{pstCn},
		mdfcn_dt = NOW()
		WHERE pst_sn = #{pstSn};
	</update>

	<update id="deletePost" parameterType="String">
		UPDATE posts SET del_dt =
		NOW() WHERE pst_sn = TRIM(#{pstSn});
	</update>

	<update id="updateComment"
		parameterType="ks55team02.customer.post.domain.PostComment">
		UPDATE post_comments SET cmnt_cn = #{cmntCn}, mdfcn_dt =
		NOW() WHERE pst_cmnt_sn = #{pstCmntSn};
	</update>

	<update id="deleteComment" parameterType="String">
		UPDATE post_comments
		SET del_dt = NOW() WHERE pst_cmnt_sn = TRIM(#{pstCmntSn});
	</update>

	<select id="selectMaxInterNumber" resultType="Integer">
		SELECT MAX(CAST(SUBSTRING_INDEX(pst_intract_sn, '_', -1) AS UNSIGNED)) FROM
		post_interactions WHERE pst_intract_sn REGEXP '^pst_itrct_[0-9]+$';
	</select>

	<select id="checkLikeExists" resultType="int">
		SELECT COUNT(*) FROM post_interactions
		WHERE pst_sn = #{pstSn} AND user_no = #{userNo} AND intract_type_cd =
		'LIKE' AND rtrcn_dt IS NULL;
	</select>

	<insert id="insertInteraction"
		parameterType="ks55team02.customer.post.domain.PostInteraction">
		INSERT INTO post_interactions (pst_intract_sn, pst_sn, user_no,
		intract_type_cd, crt_dt)
		VALUES (#{pstIntractSn}, #{pstSn}, #{userNo}, 'LIKE', NOW());
	</insert>

	<select id="countInteractionsByPost" resultType="int">
		SELECT COUNT(*) FROM post_interactions
		WHERE pst_sn = #{pstSn} AND intract_type_cd = 'LIKE' AND rtrcn_dt IS NULL;
	</select>



</mapper>
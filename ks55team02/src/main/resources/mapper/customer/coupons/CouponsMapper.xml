<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="ks55team02.customer.coupons.mapper.CouponsMapper">

	<resultMap id="couponsResultMap"
		type="ks55team02.customer.coupons.domain.Coupons">
		<result column="pblcn_cpn_id" property="pblcnCpnId" />
		<result column="user_no" property="userNo" />
		<result column="cpn_nm" property="cpnNm" />
		<result column="dscnt_vl" property="dscntVl" />
		<result column="min_ordr_amt" property="minOrdrAmt" />
		<result column="max_dscnt_amt" property="maxDscntAmt" />
		<result column="vld_bgng_dt" property="vldBgngDt" />
		<result column="vld_end_dt" property="vldEndDt" />
		<result column="tot_use_lmt_nmtm" property="totUseLmtNmtm" />
		<result column="user_per_use_lmt_nmtm"
			property="userPerUseLmtNmtm" />
		<result column="actvtn_yn" property="actvtnYn" />
		<result column="crt_dt" property="crtDt" />
		<result column="mdfcn_dt" property="mdfcnDt" />
		<result column="issue_condition_type"
			property="issueConditionType" />
		<result column="reissue_cycle" property="reissueCycle" />
	</resultMap>

	<resultMap id="userCouponsResultMap"
		type="ks55team02.customer.coupons.domain.UserCoupons">
		<result column="user_cpn_id" property="userCpnId" />
		<result column="user_no" property="userNo" />
		<result column="pblcn_cpn_id" property="pblcnCpnId" />
		<!-- UserCoupons DTO의 isUsed 필드와 매핑됩니다 (또는 useYn). -->
		<result column="use_yn" property="isUsed" />
		<result column="cpn_give_dt" property="cpnGiveDt" />
		<result column="indiv_expry_dt" property="indivExpryDt" />
		<result column="use_dt" property="useDt" />
		<result column="cpn_mdfcn_dt" property="cpnMdfcnDt" />
		<result column="issu_rsn_src_cn" property="issuRsnSrcCn" />
		<association property="coupon"
			javaType="ks55team02.customer.coupons.domain.Coupons">
			<result column="cpn_nm" property="cpnNm" />
			<result column="dscnt_vl" property="dscntVl" />
			<result column="min_ordr_amt" property="minOrdrAmt" />
			<result column="max_dscnt_amt" property="maxDscntAmt" />
			<result column="vld_end_dt" property="vldEndDt" />
			<result column="vld_bgng_dt" property="vldBgngDt" />
		</association>
	</resultMap>

	<!-- ================================================================= -->
	<!-- ================ 쿠폰 발급/조회 관련 핵심 쿼리 ==================== -->
	<!-- ================================================================= -->

	<select id="getMyCoupons" parameterType="map"
		resultMap="userCouponsResultMap">
		/* 사용자가 보유한 쿠폰 목록 조회 */
		SELECT
		uc.user_cpn_id, uc.user_no,
		uc.pblcn_cpn_id, uc.use_yn,
		uc.cpn_give_dt, uc.indiv_expry_dt,
		c.cpn_nm, c.dscnt_vl, c.min_ordr_amt, c.max_dscnt_amt,
		c.vld_bgng_dt,
		c.vld_end_dt
		FROM
		user_coupons uc
		JOIN
		coupons c ON uc.pblcn_cpn_id =
		c.pblcn_cpn_id
		WHERE
		uc.user_no = #{userNo}
		<if test="keyword != null and keyword != ''">
			AND c.cpn_nm LIKE CONCAT('%', #{keyword}, '%')
		</if>
		<!-- (개선) '사용가능' / '사용완료' 쿠폰 필터링 기능 추가 -->
		<if test="isUsed != null">
			AND uc.use_yn = #{isUsed}
		</if>
		ORDER BY
		<choose>
			<when test="'expiry'.equals(sortOrder)">uc.indiv_expry_dt ASC</when>
			<when test="'rate'.equals(sortOrder)">c.dscnt_vl DESC</when>
			<otherwise>uc.indiv_expry_dt ASC</otherwise>
		</choose>
		LIMIT #{limit} OFFSET #{offset}
	</select>

	<select id="getMyCouponsCount" parameterType="map"
		resultType="int">
		/* 사용자가 보유한 쿠폰의 전체 또는 조건별 개수 조회 */
		SELECT COUNT(*)
		FROM user_coupons uc
		JOIN coupons c ON uc.pblcn_cpn_id = c.pblcn_cpn_id
		WHERE uc.user_no =
		#{userNo}
		<if test="keyword != null and keyword != ''">
			AND c.cpn_nm LIKE CONCAT('%', #{keyword}, '%')
		</if>
		<if test="isUsed != null">
			AND uc.use_yn = #{isUsed}
		</if>
	</select>

	<!-- (추가) 쿠폰 발급 시 쿠폰의 상세 정보를 조회하기 위해 반드시 필요한 쿼리입니다. -->
	<select id="getCouponInfo" parameterType="string"
		resultMap="couponsResultMap">
		/* 단일 쿠폰의 상세 정보 조회 */
		SELECT
		pblcn_cpn_id,
		user_no,
		cpn_nm,
		dscnt_vl,
		min_ordr_amt,
		max_dscnt_amt,
		vld_bgng_dt,
		vld_end_dt,
		tot_use_lmt_nmtm,
		user_per_use_lmt_nmtm,
		actvtn_yn,
		crt_dt,
		mdfcn_dt,
		issue_condition_type,
		reissue_cycle
		FROM
		coupons
		WHERE
		pblcn_cpn_id =
		#{couponId}
	</select>


	<select id="countUserCouponByCouponId" resultType="int">
		/* (핵심 정책 쿼리)
		사용자의 특정 쿠폰 보유 여부 확인 (재발급 방지용) */
		/* 이 쿼리 결과가 0보다 크면, 절대 재발급하면 안됨. */
		SELECT COUNT(*)
		FROM user_coupons
		WHERE user_no = #{userNo} AND
		pblcn_cpn_id = #{couponId}
	</select>

	<insert id="issueUserCoupon"
		parameterType="ks55team02.customer.coupons.domain.UserCoupons">
		/* 사용자에게 쿠폰 발급 처리 (use_yn은 0으로 고정) */
		INSERT INTO
		user_coupons
		(user_cpn_id, user_no, pblcn_cpn_id, use_yn, cpn_give_dt,
		indiv_expry_dt,
		issu_rsn_src_cn)
		VALUES
		(#{userCpnId}, #{userNo},
		#{pblcnCpnId}, 0, NOW(), #{indivExpryDt}, #{issuRsnSrcCn})
	</insert>

	<select id="getUserAvailableCoupons" parameterType="String"
		resultMap="userCouponsResultMap">
		/* (우수 쿼리) 결제 시 사용 가능한 쿠폰 목록 조회 */
		SELECT
		uc.user_cpn_id,
		uc.user_no, uc.pblcn_cpn_id, uc.use_yn,
		uc.cpn_give_dt,
		uc.indiv_expry_dt, uc.use_dt, uc.cpn_mdfcn_dt,
		uc.issu_rsn_src_cn,
		c.cpn_nm, c.dscnt_vl,
		c.min_ordr_amt, c.max_dscnt_amt, c.vld_bgng_dt,
		c.vld_end_dt
		FROM
		user_coupons uc
		JOIN
		coupons c ON uc.pblcn_cpn_id =
		c.pblcn_cpn_id
		WHERE
		uc.user_no = #{userNo}
		AND uc.use_yn = 0
		AND
		(uc.indiv_expry_dt IS NULL OR uc.indiv_expry_dt > NOW())
		ORDER BY
		uc.cpn_give_dt DESC
	</select>

	<select id="getNextUserCouponId" resultType="String">
		/* user_coupons 테이블의
		새로운 PK 생성 */
		SELECT CONCAT('USRCPN_',
		LPAD(IFNULL(MAX(SUBSTRING(user_cpn_id, 8)), 0) + 1, 3, '0'))
		FROM
		user_coupons
	</select>

	<select id="getAvailableCouponsCount" parameterType="map"
		resultType="int">
		SELECT COUNT(c.pblcn_cpn_id)
		FROM coupons c
		LEFT JOIN user_coupons uc ON c.pblcn_cpn_id = uc.pblcn_cpn_id AND
		uc.user_no = #{userNo} WHERE c.actvtn_yn = 1
		AND uc.user_cpn_id IS NULL
		<if test="keyword != null and keyword != ''">
			AND c.cpn_nm LIKE CONCAT('%', #{keyword}, '%')
		</if>
	</select>

	<select id="getAvailableCoupons" parameterType="map"
		resultMap="couponsResultMap">
		SELECT
		c.pblcn_cpn_id, c.cpn_nm, c.dscnt_vl,
		c.min_ordr_amt, c.max_dscnt_amt,
		c.vld_bgng_dt, c.vld_end_dt,
		c.crt_dt, c.issue_condition_type,
		c.reissue_cycle
		FROM
		coupons c
		LEFT JOIN user_coupons uc ON c.pblcn_cpn_id = uc.pblcn_cpn_id AND
		uc.user_no = #{userNo} WHERE
		c.actvtn_yn = 1
		AND uc.user_cpn_id IS NULL
		<if test="keyword != null and keyword != ''">
			AND c.cpn_nm LIKE CONCAT('%', #{keyword}, '%')
		</if>
		ORDER BY
		<choose>
			<when test="'expiry'.equals(sortOrder)">c.vld_end_dt ASC</when>
			<when test="'rate'.equals(sortOrder)">c.dscnt_vl DESC</when>
			<otherwise>c.vld_end_dt ASC</otherwise>
		</choose>
		LIMIT #{limit} OFFSET #{offset}
	</select>

	<select id="getOwnedCouponIds" parameterType="string"
		resultType="string">
		SELECT pblcn_cpn_id FROM user_coupons WHERE user_no =
		#{userNo}
	</select>

	<!-- (추가) '첫 구매' 조건 검사를 위해 반드시 필요한 쿼리 -->
	<select id="countUserOrders" parameterType="string"
		resultType="int">
		SELECT COUNT(*)
		FROM orders
		WHERE user_no = #{userNo}
	</select>

	<!-- (추가) '리뷰 작성' 조건 검사를 위해 필요한 쿼리 (미리 추가) -->
	<select id="countUserReviews" parameterType="string"
		resultType="int">
		SELECT COUNT(*)
		FROM product_reviews
		WHERE prchsr_user_no =
		#{userNo}
	</select>

	<!-- resources/mapper/customer/coupons/CouponsMapper.xml -->

	<!-- (수정) <, > 같은 특수문자가 포함된 쿼리는 CDATA 섹션으로 감싸야 합니다. -->
	<select id="isBirthdayWeek" parameterType="string"
		resultType="boolean">
    <![CDATA[
        SELECT CASE
            WHEN ABS(DATEDIFF(CURDATE(), STR_TO_DATE(CONCAT(YEAR(CURDATE()), '-', DATE_FORMAT(u.user_brdt, '%m-%d')), '%Y-%m-%d'))) <= 3
            THEN TRUE
            ELSE FALSE
            END
        FROM users u
        WHERE u.user_no = #{userNo}
    ]]>
	</select>

	<!-- (추가) '생일 쿠폰 연 1회' 조건 검사를 위해 필요한 쿼리 (미리 추가) -->
	<select id="countIssuedBirthdayCouponThisYear" resultType="int">
		SELECT COUNT(*)
		FROM user_coupons
		WHERE user_no = #{userNo}
		AND
		pblcn_cpn_id = #{couponId}
		AND issu_rsn_src_cn = 'BIRTHDAY'
		AND
		YEAR(cpn_give_dt) = YEAR(NOW())
	</select>

	<select id="getAvailableCouponsCountExcludingOwned"
		parameterType="map" resultType="int">
		/* 사용자가 보유한 쿠폰을 제외한 발급 가능 쿠폰의 총 개수 조회 */
		SELECT COUNT(c.pblcn_cpn_id)
		FROM coupons c
		LEFT JOIN user_coupons uc ON c.pblcn_cpn_id =
		uc.pblcn_cpn_id AND
		uc.user_no = #{userNo}
		WHERE c.actvtn_yn = 1
		AND
		uc.user_cpn_id IS NULL
		<if test="keyword != null and keyword != ''">
			AND c.cpn_nm LIKE CONCAT('%', #{keyword}, '%')
		</if>
	</select>




</mapper>


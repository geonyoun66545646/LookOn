<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks55team02.customer.store.mapper.ReviewMapper">

    <!-- ================================================================= -->
    <!--                       [ RESULT MAPS ]                           -->
    <!-- ================================================================= -->
    <resultMap id="productReviewResultMap" type="ks55team02.common.domain.store.ProductReview">
        <id property="reviewId"         column="review_id"/>
        <result property="ordrDtlArtclNo" column="ordr_dtl_artcl_no"/>
        <result property="prchsrUserNo"   column="prchsr_user_no"/>
        <result property="gdsNo"          column="gds_no"/>
        <result property="ordrNo"         column="ordr_no"/>
        <result property="evlScr"         column="evl_scr"/>
        <result property="reviewCn"       column="review_cn"/>
        <result property="wrtYmd"         column="wrt_ymd"/>
        <result property="reviewStts"     column="review_stts"/>
        <result property="helpdCnt"       column="helpd_cnt"/>
        
        <!-- 1:1 관계 - 리뷰 작성자 정보 -->
        <association property="user" javaType="ks55team02.common.domain.inquiry.InquiryUser">
            <id property="userNo"     column="user_no"/>
            <result property="userNm"   column="user_nm"/>
            <result property="userNcnm" column="user_ncnm"/>
        </association>
        
        <!-- 1:1 관계 - 리뷰 작성자 프로필 이미지 -->
        <association property="userProfile" javaType="ks55team02.customer.register.domain.UserProfile">
            <id property="userNo"     column="user_no"/>
            <result property="prflImg"  column="prfl_img"/>
        </association>
        
        <!-- 1:N 관계 - 리뷰 이미지 목록 (핵심) -->
        <collection property="reviewImages" ofType="ks55team02.common.domain.store.ReviewImage">
            <id property="reviewImgId"  column="review_img_id"/>
            <result property="imgId"      column="img_id"/>
            <result property="ord"        column="ord"/>
            <association property="storeImage" javaType="ks55team02.common.domain.store.StoreImage">
                <id property="imgId"     column="img_id"/>
                <result property="imgAddr"   column="img_addr"/>
                <result property="imgFileNm" column="img_file_nm"/>
            </association>
        </collection>
    </resultMap>

    <!-- ================================================================= -->
    <!--          [ 신규 2단계 페이징 쿼리 (페이지네이션 문제 해결) ]           -->
    <!-- ================================================================= -->

    <!-- [1단계] 페이지에 해당하는 '리뷰 ID' 목록만 조회 (JOIN 없이) -->
    <!-- 이 쿼리는 중복 없이 정확히 pageSize만큼의 리뷰 ID를 가져옵니다. -->
    <select id="findReviewIdsByGdsNo" resultType="string">
        SELECT
            review_id
        FROM
            ks55team02db.product_reviews
        WHERE
            gds_no = #{gdsNo}
            AND review_stts = 1
        ORDER BY
            wrt_ymd DESC
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- [2단계] 1단계에서 얻은 ID 목록을 사용해 리뷰의 모든 상세 정보 조회 -->
    <!-- 이 쿼리는 resultMap을 통해 여러 이미지 행을 하나의 리뷰 객체로 예쁘게 그룹화해줍니다. -->
    <select id="findReviewsByIds" resultMap="productReviewResultMap">
        SELECT
            pr.review_id, pr.ordr_dtl_artcl_no, pr.prchsr_user_no, pr.gds_no, pr.ordr_no,
            pr.evl_scr, pr.review_cn, pr.wrt_ymd, pr.review_stts, pr.helpd_cnt,
            u.user_ncnm, u.user_nm,
            up.prfl_img,
            ri.review_img_id, ri.img_id, ri.ord,
            si.img_addr, si.img_file_nm
        FROM
            ks55team02db.product_reviews AS pr
        JOIN
            ks55team02db.users AS u ON pr.prchsr_user_no = u.user_no
        LEFT JOIN
            ks55team02db.user_profiles AS up ON u.user_no = up.user_no
        LEFT JOIN
            ks55team02db.review_images AS ri ON pr.review_id = ri.review_id
        LEFT JOIN
            ks55team02db.store_images AS si ON ri.img_id = si.img_id
        WHERE
            pr.review_id IN
            <foreach item="reviewId" collection="list" open="(" separator="," close=")">
                #{reviewId}
            </foreach>
        ORDER BY
            pr.wrt_ymd DESC, ri.ord ASC
    </select>

    <!-- ================================================================= -->
    <!--              [ 기존 쿼리 (리뷰 작성/조회 관련 - 사용 중) ]           -->
    <!-- ================================================================= -->

    <!-- 리뷰 작성 가능 여부 확인 (주문 상품 조회) -->
    <select id="findReviewableOrderItem" resultType="String">
        SELECT
            oi.ordr_dtl_artcl_no
        FROM
            orders o
        JOIN
            order_items oi ON o.ordr_no = oi.ordr_no
        WHERE
            o.user_no = #{userNo}
            AND o.ordr_no = #{ordrNo}
            AND oi.gds_no = #{gdsNo}
            AND oi.ordr_dtl_artcl_dcsn_cd = 'ORDERED'
        LIMIT 1
    </select>

    <!-- 중복 리뷰 검사 -->
    <select id="countReviewByOrderItem" resultType="int">
        SELECT
            COUNT(*)
        FROM
            product_reviews
        WHERE
            ordr_dtl_artcl_no = #{ordrDtlArtclNo}
    </select>

    <!-- 리뷰 데이터 INSERT -->
    <insert id="insertReview" parameterType="ks55team02.common.domain.store.ProductReview">
        INSERT INTO product_reviews (
            review_id, ordr_dtl_artcl_no, prchsr_user_no, gds_no, ordr_no,
            evl_scr, review_cn, review_stts, wrt_ymd, helpd_cnt
        ) VALUES (
            #{reviewId}, #{ordrDtlArtclNo}, #{prchsrUserNo}, #{gdsNo}, #{ordrNo},
            #{evlScr}, #{reviewCn}, '1', NOW(), 0
        )
    </insert>

    <!-- 리뷰 ID 생성을 위한 MAX 값 조회 -->
    <select id="findMaxReviewIdNumber" resultType="Integer">
        SELECT
            MAX(CAST(SUBSTRING_INDEX(review_id, '_', -1) AS UNSIGNED))
        FROM
            product_reviews
    </select>

    <!-- 리뷰 작성 가능한 주문 조회 -->
    <select id="findReviewableOrder" resultType="ks55team02.orderproduct.domain.OrderDTO">
        SELECT
            O.ordr_no AS ordrNo,
            O.ordr_dt AS ordrDt
        FROM
            orders O
        INNER JOIN
            order_items OI ON O.ordr_no = OI.ordr_no
        WHERE
            O.user_no = #{userNo}
            AND OI.gds_no = #{gdsNo}
            AND OI.ordr_dtl_artcl_dcsn_cd = 'ORDERED'
            AND NOT EXISTS (
                SELECT 1 FROM product_reviews PR WHERE PR.ordr_dtl_artcl_no = OI.ordr_dtl_artcl_no
            )
        ORDER BY
            O.ordr_dt DESC
        LIMIT 1
    </select>

    <!-- StoreImage 배치 INSERT -->
    <insert id="addStoreImages" parameterType="java.util.List">
        INSERT INTO store_images (
            img_id, img_file_nm, img_addr, img_file_sz, img_type_cd, reg_ymd, del_yn
        ) VALUES
        <foreach collection="list" item="storeImage" separator=",">
            (
                #{storeImage.imgId}, #{storeImage.imgFileNm}, #{storeImage.imgAddr}, #{storeImage.imgFileSz},
                #{storeImage.imgTypeCd}, #{storeImage.regYmd}, #{storeImage.delYn}
            )
        </foreach>
    </insert>

    <!-- ReviewImage 배치 INSERT -->
    <insert id="addReviewImages" parameterType="java.util.List">
        INSERT INTO review_images (
            review_img_id, review_id, img_id, ord
        ) VALUES
        <foreach collection="list" item="reviewImage" separator=",">
            (
                #{reviewImage.reviewImgId}, #{reviewImage.reviewId}, #{reviewImage.imgId}, #{reviewImage.ord}
            )
        </foreach>
    </insert>
    
    <!-- 전체 리뷰 개수 조회 (페이지네이션에 필요) -->
    <select id="getReviewCountByGdsNo" parameterType="String" resultType="long">
        SELECT
            COUNT(*)
        FROM
            ks55team02db.product_reviews
        WHERE
            gds_no = #{gdsNo}
            AND review_stts = 1
    </select>    
</mapper>
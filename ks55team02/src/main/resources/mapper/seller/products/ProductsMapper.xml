<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ks55team02.seller.products.mapper.ProductsMapper">

	<!-- ================== ResultMaps ================== -->
	
	<!-- ⭐ 추가: 재고 상태(ProductStatus)와 매핑된 옵션 값(OptionValue)을 함께 담는 ResultMap -->
    <resultMap id="productStatusWithValuesResultMap" type="ks55team02.seller.products.domain.ProductStatus">
        <id property="gdsSttsNo" column="ps_gds_stts_no"/>
        <result property="gdsNo" column="ps_gds_no"/>
        <result property="selPsbltyQntty" column="ps_sel_psblty_qntty"/>
        <collection property="mappedOptionValues" 
                    ofType="ks55team02.seller.products.domain.ProductOptionValue">
            <id property="optVlNo" column="pov_opt_vl_no_for_status"/>
            <result property="vlNm" column="pov_vl_nm_for_status"/>
        </collection>
    </resultMap>

	<!-- 상품 옵션 ResultMap: 상품 상세 조회 시 사용 -->
	<resultMap id="productOptionResultMap" type="ks55team02.seller.products.domain.ProductOption">
		<id property="optNo" column="po_opt_no" />
		<result property="optNm" column="po_opt_nm" />
		<result property="optIndctSn" column="po_opt_indct_sn" />
		<collection property="optionValues"
			ofType="ks55team02.seller.products.domain.ProductOptionValue"
            resultMap="optionValuesForOptionResultMap"/>
	</resultMap>
	
	<!-- ⭐ 추가: ProductOption에 속한 OptionValue들을 위한 전용 ResultMap -->
    <resultMap id="optionValuesForOptionResultMap" type="ks55team02.seller.products.domain.ProductOptionValue">
        <id property="optVlNo" column="pov_opt_vl_no"/>
        <result property="optNo" column="pov_opt_no"/>
        <result property="vlNm" column="pov_vl_nm"/>
    </resultMap>
	
	<!-- 상품 상세 정보 ResultMap (이미지, 옵션, 재고 포함) -->
	<!-- 상품 상세 정보 최종 ResultMap -->
	 <resultMap id="productDetailWithImagesResultMap" type="ks55team02.seller.products.domain.Products">
		<id column="gds_no" property="gdsNo" />
		<result column="gds_nm" property="gdsNm" />
		<result column="gds_expln" property="gdsExpln" />
        <result column="bas_prc" property="basPrc" jdbcType="DECIMAL"/>
		<result column="dscnt_rt" property="dscntRt" />
		<result column="last_sel_prc" property="lastSelPrc" jdbcType="DECIMAL"/>
        <result column="min_purchase_qty" property="minPurchaseQty"/>
        <result column="max_purchase_qty" property="maxPurchaseQty"/>
        <result column="ctgry_no" property="ctgryNo"/>
        <result column="expsr_yn" property="expsrYn"/>
        <result column="actvtn_yn" property="actvtnYn"/>

		<association property="store"
                     select="ks55team02.seller.stores.mapper.StoreMapper.getStoreById"
                     column="store_id" 
                     javaType="ks55team02.seller.stores.domain.Stores" />
        <association property="productCategory"
                     select="ks55team02.seller.products.mapper.ProductCategoryMapper.getCategoryById"
                     column="ctgry_no" javaType="ks55team02.seller.products.domain.ProductCategory" />
		<collection property="productImages"
                    select="ks55team02.seller.products.mapper.ProductImageMapper.getImagesByGdsNo"
                    column="gds_no" ofType="ks55team02.seller.products.domain.ProductImage" />
		<collection property="productOptions"
                    select="ks55team02.seller.products.mapper.ProductOptionMapper.getOptionsByGdsNo"
                    column="gds_no" ofType="ks55team02.seller.products.domain.ProductOption" />
        <collection property="productStatusList"
                    select="ks55team02.seller.products.mapper.ProductStatusMapper.getStatusListByGdsNo"
                    column="gds_no" ofType="ks55team02.seller.products.domain.ProductStatus" />
	</resultMap>
	
	<!-- 판매자별 상품 목록 ResultMap -->
	<resultMap id="productsResultMap" type="ks55team02.seller.products.domain.Products">
		<id column="gds_no" property="gdsNo" />
		<result column="store_id" property="storeId" />
		<result column="ctgry_no" property="ctgryNo" />
		<result column="gds_nm" property="gdsNm" />
		<result column="bas_prc" property="basPrc" jdbcType="DECIMAL" />
		<result column="dscnt_rt" property="dscntRt" />
		<result column="last_sel_prc" property="lastSelPrc" jdbcType="DECIMAL" />
		<result column="reg_dt" property="regDt" />
		<result column="expsr_yn" property="expsrYn" />
		<result column="actvtn_yn" property="actvtnYn" />
		<result column="thumbnail_image_path" property="thumbnailImagePath" />
		<result column="latestApprovalStatus" property="latestApprovalStatus" />
		<association property="productCategory" javaType="ks55team02.seller.products.domain.ProductCategory">
			<id property="categoryId" column="ctgry_no" />
			<result property="categoryName" column="ctgry_nm" />
		</association>
	</resultMap>
	
	<!-- 특정 카테고리에 속한 모든 상품을 비노출 처리 -->
    <update id="deactivateProductsByCategoryId" parameterType="string">
        UPDATE
            products
        SET
            expsr_yn = false,
            mdfcn_dt = CURRENT_TIMESTAMP
        WHERE
            ctgry_no = #{categoryId}
    </update>
	
	<!-- ===================== 상품 삭제(Update) 관련 쿼리 ===================== -->

	<!-- 상품 비활성화 (소프트 삭제) -->
	<update id="deactivateProduct" parameterType="map">
		UPDATE
			ks55team02db.products
		SET
			actvtn_yn = false,      <!-- 판매자에게 안보이도록 비활성 -->
			expsr_yn = false,       <!-- 구매자에게도 안보이도록 비노출 -->
			del_user_no = #{selUserNo}, <!-- 삭제 요청자 ID 기록 -->
			inactvtn_dt = CURRENT_TIMESTAMP <!-- 비활성화 일시 기록 -->
		WHERE
			gds_no = #{gdsNo}
	</update>
	
	<!-- ===================== 상품 수정(Update) 관련 쿼리 ===================== -->
	
	<!-- 상품 기본 정보 수정 -->
	<update id="updateProduct" parameterType="ks55team02.seller.products.domain.Products">
		UPDATE
			ks55team02db.products
		<set>
			<if test="gdsNm != null and gdsNm != ''">gds_nm = #{gdsNm},</if>
			<if test="gdsExpln != null and gdsExpln != ''">gds_expln = #{gdsExpln},</if>
			<if test="ctgryNo != null and ctgryNo != ''">ctgry_no = #{ctgryNo},</if>
			<if test="basPrc != null">bas_prc = #{basPrc},</if>
			<if test="dscntRt != null">dscnt_rt = #{dscntRt},</if>
			<if test="lastSelPrc != null">last_sel_prc = #{lastSelPrc},</if>
			<if test="minPurchaseQty != null">min_purchase_qty = #{minPurchaseQty},</if>
			<if test="maxPurchaseQty != null">max_purchase_qty = #{maxPurchaseQty},</if>
			<if test="mdfrNo != null and mdfrNo != ''">mdfr_no = #{mdfrNo},</if>
			mdfcn_dt = CURRENT_TIMESTAMP
		</set>
		WHERE
			gds_no = #{gdsNo}
	</update>

	<!-- 특정 상품의 모든 이미지를 비활성화 -->
	<update id="deactivateImagesByGdsNo" parameterType="string">
		UPDATE
			ks55team02db.product_images
		SET
			actvtn_yn = false,
			inactvtn_dt = CURRENT_TIMESTAMP
		WHERE
			gds_no = #{gdsNo}
	</update>

	<!-- 특정 상품의 모든 옵션을 비활성화 -->
	<update id="deactivateOptionsByGdsNo" parameterType="string">
		UPDATE
			ks55team02db.product_options
		SET
			actvtn_yn = false,
			inactvtn_dt = CURRENT_TIMESTAMP
		WHERE
			gds_no = #{gdsNo}
	</update>

	<!-- 특정 상품의 모든 재고/상태를 비활성화 -->
	<update id="deactivateStatusByGdsNo" parameterType="string">
		UPDATE
			ks55team02db.product_status
		SET
			actvtn_yn = false,
			inactvtn_dt = CURRENT_TIMESTAMP
		WHERE
			gds_no = #{gdsNo}
	</update>
	
	
	<!-- ===================== 상품 등록(Create) 관련 쿼리 ===================== -->
	<!-- 새로운 승인 이력 코드(aprv_rjct_hstry_cd) 생성 -->
	<select id="getMaxApprovalHistoryCode" resultType="string">
	    SELECT
	        CASE
	            WHEN COUNT(aprv_rjct_hstry_cd) = 0 THEN 'hist_1'
	            ELSE CONCAT('hist_', COALESCE(MAX(CAST(SUBSTRING_INDEX(aprv_rjct_hstry_cd, '_', -1) AS UNSIGNED)), 0) + 1)
	        END
	    FROM
	        product_approval_history
	</select>
	<!-- 상품 등록 시 '대기' 상태의 승인 이력 삽입 -->
	<insert id="addInitialApprovalHistory" parameterType="ks55team02.seller.products.domain.Products">
	    INSERT INTO product_approval_history 
	        (aprv_rjct_hstry_cd, gds_no, aprv_stts_cd, prcs_dt, aprv_rjct_cycl)
	    VALUES 
	        (#{aprvRjctHstryCd}, #{gdsNo}, '대기', NOW(), 1)
	</insert>
	
	<!-- 새 상품 코드(gds_no) 생성 -->
	<select id="getMaxProductCode" resultType="string">
		SELECT
			CASE
				WHEN COUNT(p.gds_no) = 0 THEN 'gds_no_1'
				ELSE CONCAT('gds_no_', COALESCE(MAX(CAST(SUBSTRING_INDEX(p.gds_no, '_', -1) AS UNSIGNED)), 0) + 1)
			END
		FROM
			ks55team02db.products p
	</select>
	
	<!-- 상품 기본 정보 삽입 -->
	<insert id="addProduct" parameterType="ks55team02.seller.products.domain.Products">
		INSERT INTO ks55team02db.products
			(gds_no, store_id, ctgry_no, sel_user_no, mdfr_no, 
			 del_user_no, gds_nm, gds_expln, bas_prc, dscnt_rt, 
			 last_sel_prc, reg_dt, expsr_yn, actvtn_yn, min_purchase_qty, max_purchase_qty)
		VALUES
			(#{gdsNo}, #{storeId}, #{ctgryNo}, #{selUserNo}, #{mdfrNo},
			 #{delUserNo}, #{gdsNm}, #{gdsExpln}, #{basPrc}, #{dscntRt},
			 #{lastSelPrc}, CURRENT_TIMESTAMP, #{expsrYn}, #{actvtnYn}, #{minPurchaseQty}, #{maxPurchaseQty})
	</insert>
	
	<!-- 새 이미지 코드(img_no) 생성 (상품 등록용) -->
	<select id="getMaxImageNo" resultType="string">
		SELECT
			CASE
				WHEN COUNT(pi.img_no) = 0 THEN 'img_no_1'
				ELSE CONCAT('img_no_', COALESCE(MAX(CAST(SUBSTRING_INDEX(pi.img_no, '_', -1) AS UNSIGNED)), 0) + 1)
			END
		FROM
			ks55team02db.product_images pi
	</select>

	<!-- 상품 이미지 정보 삽입 (상품 등록용) -->
	<insert id="insertProductImage" parameterType="ks55team02.seller.products.domain.ProductImage">
		INSERT INTO ks55team02db.product_images
			(img_no, gds_no, creatr_no, mdfr_no, img_file_path_nm, 
			 video_url, img_indct_sn, reg_dt, img_type, actvtn_yn)
		VALUES
			(#{imgNo}, #{gdsNo}, #{creatrNo}, #{mdfrNo}, #{imgFilePathNm},
			 #{videoUrl}, #{imgIndctSn}, CURRENT_TIMESTAMP, 
			 #{imgType, typeHandler=ks55team02.seller.products.handler.ProductImageTypeHandler}, #{actvtnYn})
	</insert>
	
	<!-- 새 옵션 코드(opt_no) 생성 (상품 등록용) -->
	<select id="getMaxOptionNo" resultType="string">
		SELECT
			CASE
				WHEN COUNT(po.opt_no) = 0 THEN 'opt_no_1'
				ELSE CONCAT('opt_no_', COALESCE(MAX(CAST(SUBSTRING_INDEX(po.opt_no, '_', -1) AS UNSIGNED)), 0) + 1)
			END
		FROM
			ks55team02db.product_options po
	</select>

	<!-- 상품 옵션 정보 삽입 (상품 등록용) -->
	<insert id="insertProductOption" parameterType="ks55team02.seller.products.domain.ProductOption">
		INSERT INTO ks55team02db.product_options
			(opt_no, gds_no, creatr_no, opt_nm, sngl_mltpl_chc_se_cd, opt_indct_sn, actvtn_yn)
		VALUES
			(#{optNo}, #{gdsNo}, #{creatrNo}, #{optNm}, #{snglMtplChcSeCd}, #{optIndctSn}, #{actvtnYn})
	</insert>

	<!-- 새 옵션 값 코드(opt_vl_no) 생성 (상품 등록용) -->
	<select id="getMaxOptionValueNo" resultType="string">
		SELECT
			CASE
				WHEN COUNT(pov.opt_vl_no) = 0 THEN 'opt_vl_no_1'
				ELSE CONCAT('opt_vl_no_', COALESCE(MAX(CAST(SUBSTRING_INDEX(pov.opt_vl_no, '_', -1) AS UNSIGNED)), 0) + 1)
			END
		FROM
			ks55team02db.product_option_values pov
	</select>

	<!-- 상품 옵션 값 정보 삽입 (상품 등록용) -->
	<insert id="insertProductOptionValue" parameterType="ks55team02.seller.products.domain.ProductOptionValue">
		INSERT INTO ks55team02db.product_option_values
			(opt_vl_no, opt_no, creatr_no, vl_nm, actvtn_yn)
		VALUES
			(#{optVlNo}, #{optNo}, #{creatrNo}, #{vlNm}, #{actvtnYn})
	</insert>
	
	<!-- 새 상품 상태 코드(gds_stts_no) 생성 (상품 등록용) -->
	<select id="getMaxStatusNo" resultType="string">
		SELECT
			CASE
				WHEN COUNT(ps.gds_stts_no) = 0 THEN 'gds_stts_no_1'
				ELSE CONCAT('gds_stts_no_', COALESCE(MAX(CAST(SUBSTRING_INDEX(ps.gds_stts_no, '_', -1) AS UNSIGNED)), 0) + 1)
			END
		FROM
			ks55team02db.product_status ps
	</select>

	<!-- 상품 상태 정보 삽입 (상품 등록용) -->
	<insert id="insertProductStatus" parameterType="ks55team02.seller.products.domain.ProductStatus">
		INSERT INTO ks55team02db.product_status
			(gds_stts_no, gds_no, creatr_no, sel_psblty_qntty, sldout_yn, actvtn_yn)
		VALUES
			(#{gdsSttsNo}, #{gdsNo}, #{creatrNo}, #{selPsbltyQntty}, #{sldoutYn}, #{actvtnYn})
	</insert>

	<!-- 상태-옵션 매핑 정보 삽입 (상품 등록용) -->
	<insert id="insertStatusOptionMapping" parameterType="ks55team02.seller.products.domain.StatusOptionMapping">
		INSERT INTO ks55team02db.status_option_mappings
			(gds_stts_no, opt_vl_no, creatr_no, actvtn_yn)
		VALUES
			(#{gdsSttsNo}, #{optVlNo}, #{creatrNo}, #{actvtnYn})
	</insert>
	
	
	<!-- ===================== 상품 조회(Read) 관련 쿼리 ===================== -->

	<!-- 판매자/스토어별 상품 목록 조회 -->
	<select id="getProductsBySellerAndStore" parameterType="map" resultMap="productsResultMap">
	    SELECT
	        p.gds_no, p.store_id, p.ctgry_no, p.gds_nm, p.bas_prc, p.dscnt_rt,
	        (p.bas_prc * (100 - IFNULL(p.dscnt_rt, 0.00)) / 100) AS last_sel_prc,
	        p.reg_dt, p.expsr_yn, p.actvtn_yn, pc.ctgry_nm,
	        (
	            SELECT pi.img_file_path_nm
	            FROM ks55team02db.product_images pi
	            WHERE pi.gds_no = p.gds_no AND pi.img_type = 1
	            ORDER BY pi.img_indct_sn ASC
	            LIMIT 1
	        ) AS thumbnail_image_path,
	        
	        -- ⭐ 추가: product_approval_history에서 최신 aprv_stts_cd를 가져옵니다.
	        (
	            SELECT pah.aprv_stts_cd
	            FROM ks55team02db.product_approval_history pah
	            WHERE pah.gds_no = p.gds_no
	            ORDER BY pah.prcs_dt DESC, pah.aprv_rjct_cycl DESC
	            LIMIT 1
	        ) AS latestApprovalStatus
	        
	    FROM
	        ks55team02db.products p
	    LEFT JOIN
	        ks55team02db.product_categories pc ON p.ctgry_no = pc.ctgry_no
	    WHERE
	        p.sel_user_no = #{selUserNo}
	        AND p.store_id = #{storeId}
	        AND p.actvtn_yn = true
	    ORDER BY
	        p.reg_dt DESC
	</select>

	<!-- (관리자용) 모든 상품 목록 조회 -->
	<select id="getProductList" resultMap="productsResultMap">
		SELECT
			p.gds_no, p.store_id, p.ctgry_no, p.gds_nm, p.bas_prc, p.dscnt_rt,
			(p.bas_prc * (100 - IFNULL(p.dscnt_rt, 0.00)) / 100) AS last_sel_prc,
			p.reg_dt, p.expsr_yn, p.actvtn_yn, pc.ctgry_nm,
			(
				SELECT pi.img_file_path_nm
				FROM ks55team02db.product_images pi
				WHERE pi.gds_no = p.gds_no AND pi.img_type = 1
				ORDER BY pi.img_indct_sn ASC
				LIMIT 1
			) AS thumbnail_image_path
		FROM
			ks55team02db.products p
		LEFT JOIN
			ks55team02db.product_categories pc ON p.ctgry_no = pc.ctgry_no
		ORDER BY
			p.reg_dt DESC
	</select>
	
	<!-- ProductsMapper.xml -->
	<!-- 상품 상세 정보 조회 (최종 수정 버전) -->
	<select id="getProductDetailWithImages" parameterType="String" resultMap="productDetailWithImagesResultMap">
		SELECT
			gds_no,
			gds_nm,
			store_id,
			gds_expln,
            bas_prc,
            dscnt_rt,
            (bas_prc * (1 - IFNULL(dscnt_rt / 100.0, 0.00))) AS last_sel_prc,
            min_purchase_qty,
            max_purchase_qty,
            ctgry_no,
            expsr_yn,
            actvtn_yn
		FROM
			products
		WHERE
			gds_no = #{gdsNo}
	</select>
	
	<!-- ===================== 유틸리티 쿼리 ===================== -->
	
	<!-- 상품 코드 중복 확인 -->
	<select id="countProductCode" parameterType="string" resultType="int">
		SELECT
			COUNT(*)
		FROM
			ks55team02db.products
		WHERE
			gds_no = #{gdsNo}
	</select>

</mapper>
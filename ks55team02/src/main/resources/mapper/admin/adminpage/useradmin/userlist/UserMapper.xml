<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks55team02.admin.adminpage.useradmin.userlist.mapper.UserListMapper">
	<resultMap id="userResultMap" type="UserList">
	    <id     column="user_no"            property="userNo"/>
	    <result column="mbr_grd_cd"         property="mbrGrdCd"/>
	    <result column="user_lgn_id"        property="userLgnId"/>
	    <result column="user_nm"            property="userNm"/>
	    <result column="gender_se_cd"       property="genderSeCd"/>
	    <result column="eml_addr"           property="emlAddr"/>
	    <result column="telno"              property="telno"/>
	    <result column="user_brdt"          property="userBrdt"/>
	    <result column="zip_cd"             property="zipCd"/>
	    <result column="addr"               property="addr"/>
	    <result column="daddr"              property="daddr"/>
	    <result column="user_ncnm"          property="userNcnm"/>
	    <result column="user_status"        property="userStatus"/>
	    <result column="join_dt"            property="joinDt"/>
	    <result column="whdwl_dt"           property="whdwlDt"/>
	    <result column="last_info_mdfcn_dt" property="lastInfoMdfcnDt"/>
	    <result column="last_login_dt"      property="lastLoginDt"/>
	</resultMap>
	
	<!-- 1. 회원 목록 조회 (getUserList) -->
	<select id="getUserList" parameterType="UserList" resultMap="userResultMap">
	    SELECT
	        u.user_no, 
	        u.user_lgn_id, 
	        u.user_nm, 
	        u.gender_se_cd, 
	        u.eml_addr,
	        u.telno, 
	        u.addr, 
	        u.daddr, 
	        u.user_status, 
	        u.join_dt,
	        (
	            SELECT MAX(lh.lgn_dt) 
	            FROM login_history lh 
	            WHERE lh.user_no = u.user_no AND lh.lgn_fail_nmtm = 0
	        ) AS last_login_dt
	    FROM
	        users u
	    
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	        <!-- 1. 회원 상태(분류) 조건 -->
	        <if test="statusList != null and !statusList.isEmpty()">
	            AND u.user_status IN
	            <foreach item="status" collection="statusList" open="(" separator="," close=")">
	                #{status}
	            </foreach>
	        </if>
	    
	        <!-- 2. 가입 기간 조건 -->
	        <if test="startDate != null">AND u.join_dt >= #{startDate}</if>
	        <if test="endDate != null">
	            AND u.join_dt <![CDATA[ < ]]> DATE_ADD(#{endDate}, INTERVAL 1 DAY)
	        </if>
	    
	        <!-- 3. 검색 키워드 조건 -->
	        <if test="searchKey != null and searchValue != null and searchValue != ''">
	            AND
	            <choose>
	                <when test="'userLgnId'.equals(searchKey)">
	                    u.user_lgn_id LIKE CONCAT('%', #{searchValue}, '%')
	                </when>
	                <when test="'userNm'.equals(searchKey)">
	                    u.user_nm LIKE CONCAT('%', #{searchValue}, '%')
	                </when>
	                <when test="'emlAddr'.equals(searchKey)">
	                    u.eml_addr LIKE CONCAT('%', #{searchValue}, '%')
	                </when>
	                <otherwise>
	                    (
	                       u.user_lgn_id LIKE CONCAT('%', #{searchValue}, '%')
	                    OR u.user_nm LIKE CONCAT('%', #{searchValue}, '%')
	                    OR u.eml_addr LIKE CONCAT('%', #{searchValue}, '%')
	                    )
	                </otherwise>
	            </choose>
	        </if>
	    </trim>
	
	    ORDER BY
	    <choose>
	        <when test="sortOrder != null and 'joinDtAsc'.equals(sortOrder)">
	            u.join_dt ASC
	        </when>
	        <when test="sortOrder != null and 'joinDtDesc'.equals(sortOrder)">
		        u.join_dt DESC
		    </when>
	        
	        <otherwise>
	            u.join_dt DESC
	        </otherwise>
	    </choose>
	
	    <if test="pageSize > 0">
	        LIMIT #{pageSize} OFFSET #{offset}
	    </if>
	</select>
	
	<!-- 2. 전체 회원 수 조회 (getUserCount) -->
	<select id="getUserCount" parameterType="UserList" resultType="int">
	    SELECT 
	        COUNT(*)
	    FROM 
	        users u
	    
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	        <!-- 1. 회원 상태(분류) 조건 -->
	        <if test="statusList != null and !statusList.isEmpty()">
	            AND u.user_status IN
	            <foreach item="status" collection="statusList" open="(" separator="," close=")">
	                #{status}
	            </foreach>
	        </if>
	    
	        <!-- 2. 가입 기간 조건 -->
	        <if test="startDate != null">
	            AND u.join_dt >= #{startDate}
	        </if>
	        <if test="endDate != null">
	            AND u.join_dt <![CDATA[ < ]]> DATE_ADD(#{endDate}, INTERVAL 1 DAY)
	        </if>
	    
	        <!-- 3. 검색 키워드 조건 -->
	        <if test="searchKey != null and searchValue != null and searchValue != ''">
	            AND
	            <choose>
	                <when test="'userLgnId'.equals(searchKey)">
	                    u.user_lgn_id LIKE CONCAT('%', #{searchValue}, '%')
	                </when>
	                <when test="'userNm'.equals(searchKey)">
	                    u.user_nm LIKE CONCAT('%', #{searchValue}, '%')
	                </when>
	                <when test="'emlAddr'.equals(searchKey)">
	                    u.eml_addr LIKE CONCAT('%', #{searchValue}, '%')
	                </when>
	                <otherwise>
	                    (
	                       u.user_lgn_id LIKE CONCAT('%', #{searchValue}, '%')
	                    OR u.user_nm LIKE CONCAT('%', #{searchValue}, '%')
	                    OR u.eml_addr LIKE CONCAT('%', #{searchValue}, '%')
	                    )
	                </otherwise>
	            </choose>
	        </if>
	    </trim>
	</select>
	
	<!-- 3. 회원 상태 변경 (updateUserStatus) -->
	<update id="updateUserStatus" parameterType="map">
        UPDATE
            users
        SET
            user_status = #{status} 
        WHERE
            user_no IN 
            <foreach collection="userNos" item="userNo" open="(" close=")" separator=",">
                #{userNo}
            </foreach>
    </update>
    
    <insert id="insertLoginHistoryForActivatedUsers" parameterType="list">
	    INSERT INTO login_history 
	        (user_no, lgn_use_id, lgn_dt, lgn_fail_nmtm, lgn_ip_addr)
	    VALUES
	    <foreach collection="list" item="userNo" separator=",">
	        (#{userNo}, #{userNo}, NOW(), 0, 'ADMIN_ACTIVATED')
	    </foreach>
	</insert>
    
</mapper>











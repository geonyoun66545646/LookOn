<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks55team02.admin.adminpage.productadmin.adminproductsmanagement.mapper.AdminProductManagementMapper">

    <!-- 
    ⭐ 1. AdminProductView DTO와 DB 컬럼을 매핑하는 ResultMap을 추가합니다.
       컬럼명(snake_case)과 필드명(camelCase)이 달라도 여기서 매핑해줍니다.
    -->
    <resultMap id="adminProductViewResultMap" type="ks55team02.admin.adminpage.productadmin.adminproductsmanagement.domain.AdminProductView">
        <result property="gdsNo"      column="gds_no" />
        <result property="gdsNm"      column="gds_nm" />
        <result property="storeConm"  column="store_conm" />
        <result property="selUserNo"  column="sel_user_no" />
        <result property="aprvSttsCd" column="aprv_stts_cd" />
        <result property="regDt"      column="reg_dt" />
    </resultMap>
    
    <!-- ⭐ 추가: ApprovalCriteria ResultMap 정의 -->
    <resultMap id="approvalCriteriaResultMap" type="ks55team02.admin.adminpage.productadmin.adminproductsmanagement.domain.ApprovalCriteria">
        <id property="aprvRjctRsnCd" column="aprv_rjct_rsn_cd"/>
        <result property="crtMngrId" column="crt_mngr_id"/>
        <result property="aprvRjctDtlCn" column="aprv_rjct_dtl_cn"/>
        <result property="aprvRjctRsn" column="aprv_rjct_rsn"/>
        <result property="aplcnTrgtId" column="aplcn_trgt_id"/>
        <result property="aplcnYn" column="aplcn_yn"/>
        <!-- 필요한 다른 필드도 추가 -->
    </resultMap>
    
    <!-- ⭐ 추가: 승인/반려 기준 목록 조회 (특히 '반려' 기준) -->
    <select id="getApprovalCriteriaList" resultMap="approvalCriteriaResultMap">
        SELECT
            aprv_rjct_rsn_cd,
            aprv_rjct_dtl_cn,
            aprv_rjct_rsn,
            aplcn_trgt_id,
            aplcn_yn
        FROM
            product_approval_criteria
        WHERE
            aprv_rjct_rsn = '반려'
            AND aplcn_yn = TRUE
            AND aplcn_trgt_id = 'PRODUCT'; <!-- 'PRODUCT' 관련 사유만 필터링 -->
    </select>
    
    <!-- ⭐ 추가: ProductApprovalHistory에 이력 삽입 -->
    <insert id="insertProductApprovalHistory" parameterType="ks55team02.admin.adminpage.productadmin.adminproductsmanagement.domain.ProductApprovalHistory">
        INSERT INTO product_approval_history
            (aprv_rjct_hstry_cd, gds_no, prcs_mngr_id, aprv_stts_cd, prcs_dt, rjct_rsn, aprv_rjct_cycl, mngr_cmnt_cn)
        VALUES
            (#{aprvRjctHstryCd}, #{gdsNo}, #{prcsMngrId}, #{aprvSttsCd}, NOW(), #{rjctRsn}, #{aprvRjctCycl}, #{mngrCmntCn})
    </insert>

    <!-- ⭐ 추가: ProductRejectReasonMapping에 매핑 삽입 (foreach 사용) -->
    <insert id="insertProductRejectReasonMappings" parameterType="java.util.List">
        INSERT INTO product_rjct_rsn_hstry_mapping
            (aprv_rjct_hstry_cd, aprv_rjct_rsn_cd, creatr_no, crt_ymd)
        VALUES
        <foreach collection="list" item="mapping" separator=",">
            (#{mapping.aprvRjctHstryCd}, #{mapping.aprvRjctRsnCd}, #{mapping.creatrNo}, NOW())
        </foreach>
    </insert>

    <!-- ⭐ 추가 (선택 사항이지만 권장): 상품의 가장 최신 승인 차수(aprv_rjct_cycl) 조회 -->
    <select id="getLatestApprovalCycle" parameterType="string" resultType="int">
        SELECT COALESCE(MAX(aprv_rjct_cycl), 0)
        FROM product_approval_history
        WHERE gds_no = #{gdsNo};
    </select>

    <!-- 동적 검색 조건을 위한 SQL 조각 (기존과 동일) -->
    <sql id="searchCondition">
        <where>
            pah.aprv_rjct_hstry_cd = (
                SELECT aprv_rjct_hstry_cd FROM product_approval_history
                WHERE gds_no = p.gds_no ORDER BY prcs_dt DESC, aprv_rjct_cycl DESC LIMIT 1
            ) AND pah.aprv_stts_cd = '대기'
            <if test="searchCriteria.searchValue != null and !searchCriteria.searchValue.isEmpty()">
                <choose>
                    <when test="'gdsNm'.equals(searchCriteria.searchKey)">
                        AND p.gds_nm LIKE CONCAT('%', #{searchCriteria.searchValue}, '%')
                    </when>
                    <when test="'selUserNo'.equals(searchCriteria.searchKey)">
                        AND p.sel_user_no LIKE CONCAT('%', #{searchCriteria.searchValue}, '%')
                    </when>
                    <when test="'storeName'.equals(searchCriteria.searchKey)">
                        AND s.store_conm LIKE CONCAT('%', #{searchCriteria.searchValue}, '%')
                    </when>
                </choose>
            </if>
            <if test="searchCriteria.startDate != null">
                AND p.reg_dt >= #{searchCriteria.startDate}
            </if>
            <if test="searchCriteria.endDate != null">
                <![CDATA[
                    AND p.reg_dt <= DATE_ADD(#{searchCriteria.endDate}, INTERVAL 1 DAY - INTERVAL 1 SECOND)
                ]]>
            </if>
        </where>
    </sql>

    <!-- count 쿼리는 기존과 동일 -->
    <select id="countAdminProducts" parameterType="map" resultType="int">
        SELECT COUNT(p.gds_no)
        FROM products AS p
        JOIN stores AS s ON p.store_id = s.store_id
        JOIN product_approval_history AS pah ON p.gds_no = pah.gds_no
        <include refid="searchCondition" />
    </select>

    <!-- 
    ⭐ 2. getAdminProductList 쿼리를 수정합니다.
       - resultType 대신 위에서 정의한 resultMap을 사용합니다.
       - SELECT 절에서 AS 별칭을 모두 제거하고 원래 컬럼명을 사용합니다.
    -->
    <select id="getAdminProductList" parameterType="map" resultMap="adminProductViewResultMap">
        SELECT
            p.gds_no,
            p.gds_nm,
            s.store_conm,
            p.sel_user_no,
            pah.aprv_stts_cd,
            p.reg_dt
        FROM
            products AS p
        JOIN
            stores AS s ON p.store_id = s.store_id
        JOIN
            product_approval_history AS pah ON p.gds_no = pah.gds_no
        <include refid="searchCondition" />
        ORDER BY
            p.reg_dt DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- UPDATE 쿼리는 기존과 동일 -->
    <update id="updateProductApprovalStatus" parameterType="map">
        UPDATE product_approval_history
        SET aprv_stts_cd = #{newStatus}, prcs_mngr_id = #{managerId}, prcs_dt = NOW(), mngr_cmnt_cn = '관리자에 의해 승인 처리되었습니다.'
        WHERE gds_no = #{gdsNo} AND aprv_stts_cd = '대기'
    </update>

    <update id="updateProductExposure" parameterType="map">
        UPDATE products
        SET expsr_yn = #{exposure}, mdfcn_dt = NOW(), mdfr_no = #{managerId}
        WHERE gds_no = #{gdsNo}
    </update>

</mapper>
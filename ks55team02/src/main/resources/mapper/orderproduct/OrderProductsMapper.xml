<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="ks55team02.orderproduct.mapper.OrderProductsMapper">
       <resultMap type="ks55team02.orderproduct.domain.OrderDTO" id="orderResultMap">
	        <id     column="ordr_no"        	property="ordrNo"/>
	        <result column="user_no"        	property="userNo"/>
	        <result column="ordr_dt"        	property="ordrDt"/>
	        <result column="gds_tot_amt"    	property="gdsTotAmt"/>
	        <result column="dlvy_fee_amt"       property="dlvyFeeAmt"/>
	        <result column="pblcn_cpn_id"       property="pblcnCpnId"/>
	        <result column="user_cpn_id"       	property="userCpnId"/>
	        <result column="apld_cpn_dscnt_amt" property="apldCpnDscntAmt"/>
	        <result column="last_stlm_amt"      property="lastStlmAmt"/>
	       	<result column="ordr_stts_cd"   	property="ordrSttsCd"/>
	        <result column="rcvr_nm"     		property="rcvrNm"/>
	        <result column="rcvr_telno"     	property="rcvrTelno"/>
	        <result column="dlvy_addr"    		property="dlvyAddr"/>
	        <result column="dlvy_daddr"  		property="dlvyDaddr"/>
	        <result column="zip"   				property="zip"/>
	        <result column="dlvy_memo_cn"   	property="dlvyMemoCn"/>
	        <result column="user_name"   		property="userName"/>
	        <result column="eml_addr"			property="emlAddr"/>
	        <result column="gds_nm"				property="gdsNm" />
	    </resultMap>
	    
	    <!-- ================================== 배송 관련 ================================== -->
	    <resultMap type="ks55team02.orderproduct.domain.ShipmentDTO" id="shipmentResultMap" >
	        <id 	column="dlvy_no"			property="dlvyNo"/>
	        <result column="ordr_no"			property="ordrNo"/>
	        <result column="stlm_id"			property="stlmId"/>
	        <result column="dlvy_co_nm"  		property="dlvyCoNm"/>
	        <result column="waybil_no"			property="waybilNo"/>
	        <result column="dlvy_stts_cd"		property="dlvySttsCd"/>
	        <result column="sndng_dt"			property="sndngDt"/>
	        <result column="dlvy_cmptn_dt"		property="dlvyCmptnDt"/>
	        <result column="dlvy_info_crt_dt"	property="dlvyInfoCrtDt"/>
	        <result column="dlvy_info_mdfcn_dt"	property="dlvyInfoMdfcnDt"/>
	    </resultMap>
    
    <!-- [추가] 'ORD' + '날짜' + '일련번호' 형식의 다음 주문 번호를 조회 / 새로운 주문 번호를 생성 -->
	<select id="selectNextOrderId" resultType="String">
	    SELECT CONCAT(
	        'ORD', 
	        DATE_FORMAT(CURDATE(), '%Y%m%d'), 
	        LPAD(IFNULL(MAX(CAST(SUBSTRING(ordr_no, 12) AS UNSIGNED)), 0) + 1, 3, '0')
	    )
	    FROM orders
	    WHERE ordr_no LIKE CONCAT('ORD', DATE_FORMAT(CURDATE(), '%Y%m%d'), '%')
	</select>
    
    <select id="findLatestOrderIdByUserNo" parameterType="String" resultType="String">
        SELECT
            ordr_no
        FROM
            orders
        WHERE
            user_no = #{userNo}
        ORDER BY
            ordr_dt DESC
        LIMIT 1
    </select>
  		
  	<select id="getCombinedOrderDetailsByOrderId" parameterType="String" resultMap="orderResultMap">
        SELECT
            o.ordr_no,            	-- 주문번호
            o.last_stlm_amt,        -- 최종 결제 금액
            o.ordr_dt,              -- 주문일시를 결제 승인일시로 사용
          	o.rcvr_nm,              -- 수령인 이름
            o.dlvy_addr,            -- 배송 주소
            o.dlvy_daddr,           -- 배송 상세 주소
            o.zip,                  -- 우편번호
            o.rcvr_telno,           -- 수령인 연락처
            o.user_name,            -- 주문자 이름 (수령인과 다를 수 있음)
            o.dlvy_memo_cn,         -- 배송 메모
            o.gds_tot_amt,          -- 상품 총액 (할인 전)
            o.dlvy_fee_amt,         -- 배송비
            o.apld_cpn_dscnt_amt,   -- 쿠폰 할인 금액
            u.eml_addr             -- 주문자 이메일 (users 테이블에서 JOIN)
        FROM
            orders o
        INNER JOIN
            users u ON o.user_no = u.user_no
        WHERE
            o.ordr_no = #{ordrNo}
    </select>
    
    <select id="getOrderedProductsByOrderId" parameterType="String" resultType="java.util.HashMap">
        SELECT
            COALESCE(p.gds_nm, '상품 정보 없음')    AS NAME,
            oi.ordr_qntty                       AS QUANTITY,
            oi.ordr_tm_untprc                   AS PRICE,
            (oi.ordr_qntty * oi.ordr_tm_untprc) AS TOTAL
        FROM
            order_items oi       
        LEFT JOIN
            products p ON oi.gds_no = p.gds_no
        WHERE
            oi.ordr_no = #{ordrNo}
    </select>
 
 
 

    <!-- 새로운 배송 정보 등록 -->
    <insert id="insertShipment" parameterType="ks55team02.orderproduct.domain.ShipmentDTO">
        INSERT INTO shipments
        (dlvy_no, ordr_no, stlm_id, dlvy_co_nm, waybil_no, dlvy_stts_cd, sndng_dt, dlvy_cmptn_dt, dlvy_info_crt_dt, dlvy_info_mdfcn_dt)
        VALUES
        (#{dlvyNo}, #{ordrNo}, #{stlmId}, #{dlvyCoNm}, #{waybilNo}, #{dlvySttsCd}, #{sndngDt}, #{dlvyCmptnDt}, #{dlvyInfoCrtDt}, #{dlvyInfoMdfcnDt})
    </insert>

    <!-- 모든 배송 정보 조회 -->
    <select id="getAllShipments" resultMap="shipmentResultMap">
        SELECT
            dlvy_no,
            ordr_no,
            stlm_id,
            dlvy_co_nm,
            waybil_no,
            dlvy_stts_cd,
            sndng_dt,
            dlvy_cmptn_dt,
            dlvy_info_crt_dt,
            dlvy_info_mdfcn_dt
        FROM
            shipments
    </select>

    <!-- 특정 배송 번호로 배송 정보 조회 -->
    <select id="getShipmentByDlvyNo" parameterType="string" resultMap="shipmentResultMap">
        SELECT
            dlvy_no,
            ordr_no,
            stlm_id,
            dlvy_co_nm,
            waybil_no,
            dlvy_stts_cd,
            sndng_dt,
            dlvy_cmptn_dt,
            dlvy_info_crt_dt,
            dlvy_info_mdfcn_dt
        FROM
            shipments
        WHERE
            dlvy_no = #{dlvyNo}
    </select>

    <!-- 특정 운송장 번호로 배송 정보 조회 -->
    <select id="getShipmentByWaybilNo" parameterType="string" resultMap="shipmentResultMap">
        SELECT
            dlvy_no,
            ordr_no,
            stlm_id,
            dlvy_co_nm,
            waybil_no,
            dlvy_stts_cd,
            sndng_dt,
            dlvy_cmptn_dt,
            dlvy_info_crt_dt,
            dlvy_info_mdfcn_dt
        FROM
            shipments
        WHERE
            waybil_no = #{waybilNo}
    </select>

    <!-- 배송 정보 수정 -->
    <update id="updateShipment" parameterType="ks55team02.orderproduct.domain.ShipmentDTO">
        UPDATE shipments
        SET
            ordr_no = #{ordrNo},
            stlm_id = #{stlmId},
            dlvy_co_nm = #{dlvyCoNm},
            waybil_no = #{waybilNo},
            dlvy_stts_cd = #{dlvySttsCd},
            sndng_dt = #{sndngDt},
            dlvy_cmptn_dt = #{dlvyCmptnDt},
            dlvy_info_mdfcn_dt = NOW()
        WHERE
            dlvy_no = #{dlvyNo}
    </update>

    <!-- 특정 배송 번호의 배송 정보 삭제 -->
    <delete id="deleteShipment" parameterType="string">
        DELETE FROM shipments
        WHERE dlvy_no = #{dlvyNo}
    </delete>

    <!-- 다음 배송 번호 조회 (예시: 'dlvy_00001' 형식) -->
    <!-- 실제 프로젝트에서는 시퀀스 또는 UUID 등 적절한 ID 생성 전략을 사용해야 합니다. -->
    <select id="getNextDlvyNo" resultType="string">
        SELECT
            CASE
                WHEN COUNT(dlvy_no) = 0 THEN 'dlvy_00001'
                ELSE CONCAT('dlvy_', LPAD(CAST(SUBSTRING(MAX(dlvy_no), 6) AS UNSIGNED) + 1, 5, '0'))
            END
        FROM
            shipments
        WHERE
            dlvy_no LIKE 'dlvy_%'
    </select>
    
  
  </mapper>
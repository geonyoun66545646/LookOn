<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="ks55team02.tossApi.mapper.PaymentMapper">

	<resultMap type="ks55team02.tossApi.domain.PaymentDTO" id="paymentResultMap">
        <id     column="stlm_id"        property="stlmId"/>
        <result column="ordr_no"        property="ordrNo"/>
        <result column="user_no"        property="userNo"/>
        <result column="stlm_mthd_cd"   property="stlmMthdCd"/>
        <result column="stlm_amt"       property="stlmAmt"/>
        <result column="stlm_stts_cd"   property="stlmSttsCd"/>
        <result column="pg_dlng_id"     property="pgDlngId"/>
        <result column="pg_co_info"     property="pgCoInfo"/>
        <result column="stlm_cmptn_dt"  property="stlmCmptnDt"/>
        <result column="stlm_dmnd_dt"   property="stlmDmndDt"/>
    </resultMap>
    
    <resultMap type="ks55team02.tossApi.domain.OrderDTO" id="orderResultMap">
        <id     column="ordr_no"        	property="ordrNo"/>
        <result column="user_no"        	property="userNo"/>
        <result column="ordr_dt"        	property="ordrDt"/>
        <result column="gds_tot_amt"    	property="gdsTotAmt"/>
        <result column="dlvy_fee_amt"       property="dlvyFeeAmt"/>
        <result column="pblcn_cpn_id"       property="pblcnCpnId"/>
        <result column="user_cpn_id"       	property="userCpnId"/>
        <result column="apld_cpn_dscnt_amt" property="apldCpnDscntAmt"/>
        <result column="last_stlm_amt"      property="lastStlmAmt"/>
       	<result column="ordr_stts_cd"   	property="ordrSttsCd"/>
        <result column="rcvr_nm"     		property="rcvrNm"/>
        <result column="rcvr_telno"     	property="rcvrTelno"/>
        <result column="dlvy_addr"    		property="dlvyAddr"/>
        <result column="dlvy_daddr"  		property="dlvyDaddr"/>
        <result column="zip"   				property="zip"/>
        <result column="dlvy_memo_cn"   	property="dlvyMemoCn"/>
        <result column="user_name"   		property="userName"/>
    </resultMap>
    
    <!-- <<<<<<<<< [추가됨] OrderItemsDTO에 대한 resultMap >>>>>>>>> -->
    <resultMap type="ks55team02.tossApi.domain.OrderItemsDTO" id="orderItemsResultMap">
        <id     column="ordr_dtl_artcl_no"  property="ordrDtlArtclNo"/>
        <result column="ordr_no"            property="ordrNo"/>
        <result column="opt_no"             property="optNo"/>
        <result column="gds_no"             property="gdsNo"/>
        <result column="store_id"           property="storeId"/>
        <result column="ordr_qntty"         property="ordrQntty"/>
        <result column="ordr_tm_untprc"     property="ordrTmUntprc"/>
        <result column="ordr_dtl_artcl_dcsn_cd" property="ordrDtlArtclDcsnCd"/>
    </resultMap>
    
    <!-- <<<<<<<<< [추가됨] 새로운 CouponDetailsMap resultMap >>>>>>>>> -->
    <resultMap type="ks55team02.customer.coupons.domain.Coupons" id="CouponDetailsMap">
        <id     column="user_cpn_id"        property="userCpnId"/>
        <result column="user_no"            property="userNo"/>
        <result column="pblcn_cpn_id"       property="pblcnCpnId"/>
        <result column="use_yn"             property="useYn"/>
        <result column="cpn_give_dt"        property="cpnGiveDt"/>
        <result column="indiv_expry_dt"     property="indivExpryDt"/>
        <result column="use_dt"             property="useDt"/>
        <result column="cpn_mdfcn_dt"       property="cpnMdfcnDt"/>
        <result column="issu_rsn_src_cn"    property="issuRsnSrcCn"/>
    </resultMap>
     
    <!-- <<<<<<<<< [추가됨] 새로운 UserCouponDetailsMap resultMap >>>>>>>>> -->
    <resultMap type="ks55team02.customer.coupons.domain.UserCoupons" id="UserCouponDetailsMap">   
        <id 	column="pblcn_cpn_cd"       	property="pblcnCpnCd"/>
        <result column="cpn_nm"             	property="cpnNm"/>
        <result column="dscnt_vl"           	property="dscntVl"/>
        <result column="min_ordr_amt"       	property="minOrdrAmt"/>
        <result column="max_dscnt_amt"      	property="maxDscntAmt"/>
        <result column="vld_bgng_dt"        	property="vldBgngDt"/>
        <result column="vld_end_dt"         	property="vldEndDt"/>
        <result column="tot_use_lmt_nmtm"   	property="totUseLmtNmtm"/>
        <result column="user_per_use_lmt_nmtm" 	property="userPerUseLmtNmtm"/>
        <result column="actvtn_yn"          	property="actvtnYn"/>
        <result column="reissue_cycle"      	property="reissueCycle"/>
        <result column="issue_condition_type" 	property="issueConditionType"/>
    </resultMap>
    
    <!-- <<<<<<<<< [위치변경 및 추가] ID 생성 쿼리 섹션 >>>>>>>>> -->
    <select id="selectNextOrderId" resultType="String">
	    SELECT CONCAT(
	        'ORD', 
	        DATE_FORMAT(CURDATE(), '%Y%m%d'), 
	        LPAD(IFNULL(MAX(CAST(SUBSTRING(ordr_no, 12) AS UNSIGNED)), 0) + 1, 3, '0')
	    )
	    FROM orders
	    WHERE ordr_no LIKE CONCAT('ORD', DATE_FORMAT(CURDATE(), '%Y%m%d'), '%')
	</select>

    <select id="selectNextOrderItemId" resultType="String">
        SELECT CONCAT(
            'ITEM',
            DATE_FORMAT(CURDATE(), '%Y%m%d'),
            LPAD(IFNULL(MAX(CAST(SUBSTRING(ordr_dtl_artcl_no, 13) AS UNSIGNED)), 0) + 1, 3, '0')
        )
        FROM order_items
        WHERE ordr_dtl_artcl_no LIKE CONCAT('ITEM', DATE_FORMAT(CURDATE(), '%Y%m%d'), '%')
    </select>
	
    <select id="selectNextPaymentId" resultType="String">
        SELECT CONCAT('pay_', LPAD(IFNULL(MAX(CAST(SUBSTRING(stlm_id, 5) AS UNSIGNED)), 0) + 1, 5, '0'))
        FROM payments
    </select>
    
    <select id="selectNextPaymentHistoryId" resultType="String">
        SELECT CONCAT('pay_his_', LPAD(IFNULL(MAX(CAST(SUBSTRING(stlm_hstry_id, 9) AS UNSIGNED)), 0) + 1, 5, '0'))
        FROM payments_history
    </select>
    <!-- <<<<<<<<< [위치변경 및 추가] ID 생성 쿼리 섹션 끝 >>>>>>>>> -->

    <!-- <<<<<<<<< [위치변경 및 추가] 주문 (Orders) 관련 쿼리 섹션 >>>>>>>>> -->
    <insert id="insertOrder" parameterType="ks55team02.tossApi.domain.OrderDTO">
	    INSERT INTO orders (
	        ordr_no, user_no, ordr_dt, gds_tot_amt, dlvy_fee_amt, pblcn_cpn_id,
	        user_cpn_id, apld_cpn_dscnt_amt, last_stlm_amt, ordr_stts_cd,
	        rcvr_nm, rcvr_telno, dlvy_addr, dlvy_daddr, zip, dlvy_memo_cn, user_name
	    ) VALUES (
	        #{ordrNo}, #{userNo}, #{ordrDt}, #{gdsTotAmt}, #{dlvyFeeAmt}, #{pblcnCpnId},
	        #{userCpnId}, #{apldCpnDscntAmt}, #{lastStlmAmt}, #{ordrSttsCd},
	        #{rcvrNm}, #{rcvrTelno}, #{dlvyAddr}, #{dlvyDaddr}, #{zip}, #{dlvyMemoCn}, #{userName}
	    )
	</insert>

    <insert id="insertOrderItem" parameterType="map">
        INSERT INTO order_items (
            ordr_dtl_artcl_no, ordr_no, opt_no, gds_no, store_id, ordr_qntty, ordr_tm_untprc, ordr_dtl_artcl_dcsn_cd
        ) VALUES (
            #{ordrDtlArtclNo}, #{ordrNo}, #{optNo}, #{gdsNo}, #{storeId}, #{ordrQntty}, #{ordrTmUntprc}, #{ordrDtlArtclDcsnCd}
        )
    </insert>
    
    <update id="updateOrderStatus" parameterType="map">
        UPDATE orders
           SET ordr_stts_cd = #{status}
         WHERE ordr_no = #{orderId}
    </update>
    
    <!-- <<<<<<<<< [추가됨] 주문 ID로 주문 상세 정보를 조회 (orders 테이블) >>>>>>>>> -->
    <select id="getOrderDetailsByOrderId" parameterType="String" resultMap="orderResultMap">
        SELECT
            ordr_no, user_no, ordr_dt, gds_tot_amt, dlvy_fee_amt, pblcn_cpn_id,
            user_cpn_id, apld_cpn_dscnt_amt, last_stlm_amt, ordr_stts_cd,
            rcvr_nm, rcvr_telno, dlvy_addr, dlvy_daddr, zip, dlvy_memo_cn,
            (SELECT user_nm FROM users WHERE user_no = o.user_no) AS user_name
        FROM
            orders o
        WHERE
            ordr_no = #{orderId}
    </select>

    <!-- <<<<<<<<< [추가됨] 주문 ID로 주문 항목(상품 및 옵션) 상세 정보를 조회 (order_items 테이블) >>>>>>>>> -->
    <select id="getOrderedProductsByOrderId" parameterType="String" resultType="java.util.Map">
        SELECT
            oi.ordr_dtl_artcl_no,
            oi.ordr_no,
            oi.opt_no,
            oi.gds_no,
            oi.store_id,
            oi.ordr_qntty,
            oi.ordr_tm_untprc,
            oi.ordr_dtl_artcl_dcsn_cd,
            p.gds_nm AS product_name,          -- 상품 이름
            po.opt_nm AS option_name           -- 옵션 이름
        FROM
            order_items oi
        JOIN
            products p ON oi.gds_no = p.gds_no
        LEFT JOIN
            product_options po ON oi.opt_no = po.opt_no
        WHERE
            oi.ordr_no = #{orderId}
        ORDER BY
            oi.ordr_dtl_artcl_no ASC
    </select>
    
    <select id="findLatestOrderIdByUserNo" parameterType="String" resultType="String">
	    SELECT
	        ordr_no
	    FROM
	        orders
	    WHERE
	        user_no = #{userNo}
	    ORDER BY
	        ordr_dt DESC
	    LIMIT 1
	</select>
    <!-- <<<<<<<<< [위치변경 및 추가] 주문 (Orders) 관련 쿼리 섹션 끝 >>>>>>>>> -->

    <!-- <<<<<<<<< [위치변경 및 추가] 결제 (Payments) 관련 쿼리 섹션 >>>>>>>>> -->
	<insert id="insertPayment" parameterType="ks55team02.tossApi.domain.PaymentDTO">
        INSERT INTO payments (
            stlm_id, ordr_no, user_no, stlm_mthd_cd, stlm_amt, 
            stlm_stts_cd, pg_dlng_id, pg_co_info, stlm_cmptn_dt, stlm_dmnd_dt
        ) VALUES (
            #{stlmId}, #{ordrNo}, #{userNo}, #{stlmMthdCd}, #{stlmAmt},
            #{stlmSttsCd}, #{pgDlngId}, #{pgCoInfo}, NOW(), #{stlmDmndDt} 
        )
    </insert>

    <insert id="insertPaymentHistory" parameterType="ks55team02.tossApi.domain.PaymentHistoryDTO">
        INSERT INTO payments_history (
            stlm_hstry_id, stlm_id, hstry_crt_dt, hstry_mdfcn_dt
        ) VALUES (
            #{stlmHstryId}, #{stlmId}, NOW(), NOW()
        )
    </insert>

    <select id="getPaymentIdByPgDlngId" parameterType="String" resultType="String">
        SELECT stlm_id
        FROM payments
        WHERE pg_dlng_id = #{pgDlngId}
    </select>

    <update id="updatePaymentStatusAndCompletionDate" parameterType="map">
        UPDATE payments
        SET 
            stlm_stts_cd = #{stlmSttsCd},
            stlm_cmptn_dt = NOW()
        WHERE 
            pg_dlng_id = #{pgDlngId}
            AND ordr_no = #{ordrNo}
    </update>
    <!-- <<<<<<<<< [위치변경 및 추가] 결제 (Payments) 관련 쿼리 섹션 끝 >>>>>>>>> -->

    <!-- <<<<<<<<< [위치변경 및 추가] 쿠폰 관련 쿼리 섹션 >>>>>>>>> -->
    <select id="getUserCouponDetails" parameterType="map" resultType="map">
        SELECT
            uc.user_cpn_id AS userCpnId,
            uc.pblcn_cpn_id AS pblcnCpnId,
            uc.user_no AS userNo,
            uc.issue_dt AS issueDt,
            uc.use_dt AS useDt,
            uc.indiv_expry_dt AS indivExpryDt,
            uc.use_yn AS useYn,
            uc.use_rsn_src_cn AS useRsnSrcCn,
            uc.issu_rsn_src_cn AS issuRsnSrcCn,
            c.pblcn_cpn_cd AS pblcnCpnCd,
            c.cpn_nm AS cpnNm,
            c.dscnt_tp_cd AS dscntTpCd,  c.dscnt_vl AS dscntVl,
            c.min_ordr_amt AS minOrdrAmt,
            c.max_dscnt_amt AS maxDscntAmt,
            c.vld_bgng_dt AS vldBgngDt,
            c.vld_end_dt AS vldEndDt,
            c.tot_use_lmt_nmtm AS totUseLmtNmtm,
            c.user_per_use_lmt_nmtm AS userPerUseLmtNmtm,
            c.actvtn_yn AS actvtnYn,
            c.reissue_cycle AS reissueCycle,
            c.issue_condition_type AS issueConditionType
        FROM
            user_coupons uc
        JOIN
            coupons c ON uc.pblcn_cpn_id = c.pblcn_cpn_id
        WHERE
            uc.user_no = #{userNo}
            AND c.pblcn_cpn_cd = #{pblcnCpnCd}
            AND uc.use_yn = 1  -- 사용 가능한 쿠폰 (MySQL Tinyint 1은 true)
            AND (uc.indiv_expry_dt IS NULL OR uc.indiv_expry_dt > NOW()) -- 개별 만료일이 없거나 만료일이 현재보다 큰 경우
            AND (c.vld_end_dt IS NULL OR c.vld_end_dt > NOW()) -- 전체 쿠폰 만료일이 없거나 만료일이 현재보다 큰 경우
            AND c.actvtn_yn = 1 -- 활성화된 쿠폰만
    </select>

	<select id="selectUserCoupons" parameterType="String" resultType="java.util.HashMap">
        SELECT
            uc.user_cpn_id,        -- 사용자 쿠폰 ID (프론트엔드 option value)
            uc.pblcn_cpn_id,       -- 발행 쿠폰 ID
            c.cpn_nm,              -- 쿠폰명 (프론트엔드 option text)
            c.dscnt_vl,            -- 할인율 값 (프론트엔드 dataset.discount)
            c.min_ordr_amt,        -- 최소 주문 금액 (프론트엔드 dataset.minOrder)
            c.max_dscnt_amt,       -- 최대 할인 금액 (프론트엔드 dataset.maxDiscount)
            uc.indiv_expry_dt,     -- 개별 만료 일시 (필요시)
            c.vld_end_dt           -- 발행 쿠폰 유효 종료 일시 (필요시)
        FROM
            user_coupons uc        -- 사용자 보유 쿠폰 테이블
        JOIN
            coupons c ON uc.pblcn_cpn_id = c.pblcn_cpn_id -- 발행 쿠폰 테이블과 조인
        WHERE
            uc.user_no = #{userNo}   -- 특정 사용자 번호에 해당하는 쿠폰
            AND uc.use_yn = 1        -- 사용 여부가 '1' (사용 가능)인 쿠폰
            AND c.actvtn_yn = 1      -- 발행 쿠폰이 활성 상태인 쿠폰
            AND (
                -- 개별 만료일이 설정되어 있으면 개별 만료일 기준으로 유효성 검사
                (uc.indiv_expry_dt IS NOT NULL AND uc.indiv_expry_dt >= NOW())
                OR
                (uc.indiv_expry_dt IS NULL AND c.vld_end_dt >= NOW())
            )
        ORDER BY
            c.cpn_nm ASC -- 쿠폰명을 기준으로 정렬 (선택 사항)
    </select>

    <update id="updateUserCouponToUsed" parameterType="String">
        UPDATE user_coupons
        SET
            use_yn = 0, -- 사용 완료 (0)
            use_dt = NOW()
        WHERE
            user_cpn_id = #{userCpnId}
            AND use_yn = 1 -- 아직 사용하지 않은 상태일 때만 업데이트
    </update>
    <!-- <<<<<<<<< [위치변경 및 추가] 쿠폰 관련 쿼리 섹션 끝 >>>>>>>>> -->

    <!-- <<<<<<<<< [기존] getUserOrderPaymentHistory는 기존 위치에 유지 >>>>>>>>> -->
    <select id="getUserOrderPaymentHistory" parameterType="String" resultType="Map">
        SELECT
            o.ordr_no,
            o.ordr_dt,
            o.last_stlm_amt,
            o.ordr_stts_cd,
            p.stlm_mthd_cd,
            (SELECT gds_nm FROM products WHERE gds_no = (SELECT gds_no FROM order_items WHERE ordr_no = o.ordr_no LIMIT 1)) AS first_product_name,
            (SELECT COUNT(*) FROM order_items WHERE ordr_no = o.ordr_no) AS total_products_count
        FROM
            orders o
        JOIN
            payments p ON o.ordr_no = p.ordr_no
        WHERE
            o.user_no = #{userNo}
        ORDER BY
            o.ordr_dt DESC
    </select>

</mapper>
